<h2>What is Ruby on Rails?</h2>
<p>
    Ruby on Rails, often just called “Rails”, is a development tool that gives web developers access to libraries, thus
    providing structure for all the code they write. It is a server-side web app framework that extends the Ruby
    programming language. Ruby is the operating language for Rails in the same way that PHP runs Symfony and Zend, or
    Java runs Struts. Rails combines the Ruby programming language with HTML, CSS, and JavaScript to create a web app.
    This framework uses Ruby to dynamically assemble HTML, CSS, and JavaScript files. Rails helps developers to build
    websites and web apps by abstracting and simplifying common, repetitive tasks.</p>
<p>
    Rails apps operate on a model–view–controller (MVC) pattern. Many other web frameworks use this pattern, such as
    AngularJS (JavaScript), Django (Python) and CakePHP (PHP).This means that the apps are divided into three parts:
    models, views, and controllers. These components have the following roles:
</p><p>
    Models. Used to represent forms of data used by the app, they contain the logic to manipulate and retrieve that
    data. In Rails, a model is represented as a class. These forms of data are not low-level like strings or arrays.
</p>
<p>
    Views. Templates (typically formed of a mix of HTML and Ruby code) that are used to build the data users of web apps
    see in their browsers or through other clients. They can be rendered as HTML for web browsers, XML, RSS or other
    formats.
</p><p>
    Controllers. Provide the logic that binds together models (their associated data) and views. They process input,
    call methods and deliver data to the views. In Rails, controllers contain methods known as actions that, generally,
    represent each action relevant to the controller, such as “show”, “delete”, “view”, etc. The framework can be used
    with various operating systems such as Windows, Mac OS X and Linux; databases such as SQLite, MySQL, PostgreSQL; and
    web servers such as Apache and, Nginx.
</p><p>
    There are a few core principles in web programming that drive developers’ approach to projects. One of the main ones
    is “convention over configuration” (CoC). In other words, developers don’t have to spend a lot of time configuring
    files if they follow standard industry norms. Rails comes with a set of conventions which improve development
    efficiency.
</p><p>
    Another important principle of Ruby on Rails development is “don’t repeat yourself” (DRY). Developers should always
    look to avoid duplication in their code, and rather isolate functionality in small functions or files. This
    principle promotes the use of modular code, which is easier to understand, read and debug. When code is duplicated,
    the outcome becomes more complex, making it more difficult to maintain, and more vulnerable to bugs.
</p><p>
    Ruby on Rails for web development uses Representational State Transfer (REST) architecture that governs the
    relationship between the client and the server. It helps create logic in the app, and produces code that developers
    find highly intuitive and functional.
</p><p>
    Another great extension is RubyGems, a package manager that makes it easy to create and share software libraries
    (“gems”). It’s referred to as one of the big advantages of Ruby on Rails. RubyGems provides a reliable and simple
    system to install “gems”. Anyone can upload them to the central RubyGems website, making the “gem” immediately
    available for installation by others. The RubyGems website is where developers obtain the most recent version of
    Rails.
    </p>